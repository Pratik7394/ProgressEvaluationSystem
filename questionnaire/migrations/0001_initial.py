# Generated by Django 2.1.7 on 2019-05-15 21:08

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registration', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject_Year', models.IntegerField(blank=True, choices=[(2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], null=True)),
                ('Subject_Term', models.CharField(blank=True, choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer')], max_length=6)),
                ('Subject_Name', models.CharField(max_length=200)),
                ('Subject_Code', models.CharField(max_length=50)),
                ('Grade', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='examAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Attempt_Number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('Grade', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=5000)),
                ('Venue', models.CharField(blank=True, max_length=5000)),
                ('Status_of_Paper', models.CharField(choices=[('In Progress', 'In Progress'), ('Under Revision', 'Under Revision'), ('Published', 'Published')], max_length=15)),
                ('Publish_Year', models.IntegerField(blank=True, choices=[(2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], null=True)),
                ('Publish_Term', models.CharField(blank=True, choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer')], max_length=6)),
                ('List_of_Authors', models.CharField(max_length=5000)),
                ('Author', models.ForeignKey(blank=True, db_column='name', on_delete=django.db.models.deletion.PROTECT, to='registration.studentName')),
            ],
        ),
        migrations.CreateModel(
            name='qualifyingExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_Name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionnaire_for', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Inactive', max_length=10)),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('end_date', models.DateField()),
                ('previous_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='research',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Topic', models.CharField(max_length=5000)),
                ('Proposal', models.DateField()),
                ('Proposal_Status', models.CharField(choices=[('Expected', 'Expected'), ('Passed', 'Passed'), ('Not Passed', 'Not Passed')], default='Expected', max_length=10)),
                ('Defense', models.DateField()),
                ('Defense_Status', models.CharField(choices=[('Expected', 'Expected'), ('Passed', 'Passed'), ('Not Passed', 'Not Passed')], default='Expected', max_length=10)),
                ('Thesis_Committee', models.TextField(blank=True, max_length=5000)),
                ('Current_GPA', models.FloatField(null=True, validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(0)])),
                ('Current_Academic_Advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='academic_advisor', to='registration.professorWhiteList')),
                ('Current_Research_Advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='research_advisor', to='registration.professorWhiteList')),
                ('questionnaire_for', models.ForeignKey(db_column='questionnaire_for', on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire')),
                ('username', models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='submissionTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Not Started', 'Not Started'), ('Saved', 'Saved'), ('Submitted For Review', 'Submitted For Review'), ('Review In Progress', 'Review In Progress'), ('Review Submitted', 'Review Submitted')], max_length=25)),
                ('fullname', models.CharField(max_length=500)),
                ('current_GPA', models.FloatField(blank=True, null=True)),
                ('Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('Current_Research_Advisor', models.CharField(blank=True, max_length=500, null=True)),
                ('Current_Academic_Advisor', models.CharField(blank=True, max_length=500, null=True)),
                ('Current_Program_Year', models.IntegerField(blank=True, null=True)),
                ('Feedback', models.TextField(blank=True)),
                ('questionnaire_for', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire')),
                ('username', models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='techingAssistant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject_Year', models.IntegerField(blank=True, choices=[(2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019)], null=True)),
                ('Subject_Term', models.CharField(blank=True, choices=[('Fall', 'Fall'), ('Spring', 'Spring'), ('Summer', 'Summer')], max_length=6)),
                ('Subject_Name', models.CharField(max_length=200)),
                ('Subject_Code', models.CharField(max_length=50)),
                ('Instructor_Name', models.CharField(max_length=200)),
                ('Responsibilities', models.TextField(max_length=5000)),
                ('Lecture_or_Presentation_Given', models.TextField(blank=True, max_length=5000)),
                ('Area_of_Improvement', models.TextField(blank=True, max_length=5000)),
                ('questionnaire_for', models.ForeignKey(db_column='questionnaire_for', on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire')),
                ('username', models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='paper',
            name='questionnaire_for',
            field=models.ForeignKey(db_column='questionnaire_for', on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire'),
        ),
        migrations.AddField(
            model_name='examattempt',
            name='Exam_Name',
            field=models.ForeignKey(db_column='exam_Name', on_delete=django.db.models.deletion.PROTECT, to='questionnaire.qualifyingExam'),
        ),
        migrations.AddField(
            model_name='examattempt',
            name='questionnaire_for',
            field=models.ForeignKey(db_column='questionnaire_for', on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire'),
        ),
        migrations.AddField(
            model_name='examattempt',
            name='username',
            field=models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='questionnaire_for',
            field=models.ForeignKey(db_column='questionnaire_for', on_delete=django.db.models.deletion.PROTECT, to='questionnaire.questionnaire'),
        ),
        migrations.AddField(
            model_name='course',
            name='username',
            field=models.ForeignKey(db_column='username', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='techingassistant',
            unique_together={('username', 'questionnaire_for', 'Subject_Name', 'Subject_Year', 'Subject_Term')},
        ),
        migrations.AlterUniqueTogether(
            name='submissiontrack',
            unique_together={('username', 'questionnaire_for')},
        ),
        migrations.AlterUniqueTogether(
            name='research',
            unique_together={('username', 'questionnaire_for')},
        ),
        migrations.AlterUniqueTogether(
            name='paper',
            unique_together={('Author', 'questionnaire_for', 'Title')},
        ),
        migrations.AlterUniqueTogether(
            name='examattempt',
            unique_together={('username', 'questionnaire_for', 'Exam_Name', 'Attempt_Number')},
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('username', 'questionnaire_for', 'Subject_Name', 'Subject_Year', 'Subject_Term')},
        ),
    ]
